CREATE DATABASE ColonialJourney
USE ColonialJourney

-- [==============================> 1 <==============================]
CREATE TABLE Planets
(
	Id INT PRIMARY KEY IDENTITY,
	[Name] NVARCHAR(30) NOT NULL
)

CREATE TABLE Spaceports
(
	Id INT PRIMARY KEY IDENTITY,
	[Name] NVARCHAR(50) NOT NULL,
	PlanetId INT FOREIGN KEY REFERENCES Planets(Id) NOT NULL
)

CREATE TABLE Spaceships
(
	Id INT PRIMARY KEY IDENTITY,
	[Name] NVARCHAR(50) NOT NULL,
	Manufacturer NVARCHAR(30) NOT NULL,
	LightSpeedRate INT DEFAULT 0
)

CREATE TABLE Colonists
(
	Id INT PRIMARY KEY IDENTITY,
	FirstName NVARCHAR(20) NOT NULL,
	LastName NVARCHAR(20) NOT NULL,
	Ucn NVARCHAR(10) UNIQUE NOT NULL,
	BirthDate DATE NOT NULL,
)

CREATE TABLE Journeys
(
	Id INT PRIMARY KEY IDENTITY,
	JourneyStart DATETIME NOT NULL,
	JourneyEnd DATETIME NOT NULL,
	Purpose NVARCHAR(11) CHECK(Purpose IN ('Medical', 'Technical', 'Educational', 'Military')) NOT NULL,
	DestinationSpaceportId INT FOREIGN KEY REFERENCES Spaceports(Id)  NOT NULL,
	SpaceshipId INT FOREIGN KEY REFERENCES Spaceships(Id) NOT NULL
)

CREATE TABLE TravelCards
(
	Id INT PRIMARY KEY IDENTITY,
	CardNumber NVARCHAR(10) CHECK(LEN(CardNumber) = 10) UNIQUE NOT NULL,
	JobDuringJourney NVARCHAR(8) CHECK(JobDuringJourney IN ('Pilot', 'Engineer', 'Trooper', 'Cleaner', 'Cook')),
	ColonistId INT FOREIGN KEY REFERENCES Colonists(Id) NOT NULL,
	JourneyId INT FOREIGN KEY REFERENCES Journeys(Id) NOT NULL
)

-- [==============================> 2 <==============================]
INSERT INTO Planets(Name) VALUES
('Mars'), 
('Earth'), 
('Jupiter'), 
('Saturn') 

INSERT INTO Spaceships(Name, Manufacturer, LightSpeedRate) VALUES
('Golf', 'VW', 3),
('WakaWaka', 'Wakanda', 4),
('Falcon9', 'SpaceX', 1),
('Bed', 'Vidolov', 6)

-- [==============================> 3 <==============================]
UPDATE Spaceships
SET LightSpeedRate += 1
WHERE Id BETWEEN 8 AND 12

-- [==============================> 4 <==============================]
DELETE FROM TravelCards
WHERE JourneyId = 1 OR JourneyId = 2 OR JourneyId = 3 
DELETE FROM Journeys
WHERE Id = 1 OR Id = 2 OR Id = 3 

-- [==============================> 5 <==============================]
SELECT Id, FORMAT(JourneyStart, 'dd/MM/yyyy') AS JourneyStart, FORMAT(JourneyEnd, 'dd/MM/yyyy') AS JourneyEnd FROM Journeys
WHERE Purpose = 'Military'
ORDER BY JourneyStart

-- [==============================> 6 <==============================]
SELECT c.Id, c.FirstName +' '+ c.LastName AS full_name FROM Colonists as c
JOIN TravelCards AS tc ON c.Id = tc.ColonistId
WHERE tc.JobDuringJourney = 'Pilot'
ORDER BY c.Id

-- [==============================> 7 <==============================]
SELECT COUNT(*) FROM Colonists as c
JOIN TravelCards AS tc ON c.Id = tc.ColonistId
WHERE tc.JobDuringJourney = 'Engineer'

-- [==============================> 8 <==============================]
SELECT s.Name, s.Manufacturer FROM Spaceships  as s
JOIN Journeys AS j ON s.Id = j.SpaceshipId
JOIN TravelCards AS tc ON j.Id = tc.JourneyId
JOIN Colonists AS c ON tc.ColonistId = c.Id
WHERE ABS( DATEDIFF(YEAR,c.BirthDate,  '01/01/2019')) <= 30 AND tc.JobDuringJourney = 'Pilot'
ORDER BY s.Name

-- [==============================> 9 <==============================]
SELECT p.Name AS PlanetName, COUNT(j.Purpose) AS JourneysCount FROM Planets p
JOIN Spaceports AS s ON p.Id = s.PlanetId
JOIN Journeys AS j ON s.Id = j.DestinationSpaceportId
GROUP BY p.Name
ORDER BY COUNT(j.Purpose) DESC, p.Name ASC

-- [==============================> 10 <==============================]
-- MUST LEARN!!!
SELECT k.JobDuringJourney, c.FirstName +' '+c.LastName AS FullName, k.JobRank
FROM
(
	SELECT tc.JobDuringJourney AS JobDuringJourney, tc.ColonistId,
	DENSE_RANK() OVER (PARTITION BY tc.JobDuringJourney ORDER BY co.BirthDate ASC) AS JobRank
	FROM TravelCards AS tc
	JOIN Colonists AS co ON co.Id = tc.ColonistId
	GROUP BY tc.JobDuringJourney, co.BirthDate, tc.ColonistId
) AS k
JOIN Colonists AS c ON c.Id = k.ColonistId
WHERE JobRank = 2
ORDER BY k.JobDuringJourney
GO

-- [==============================> 11 <==============================]
CREATE FUNCTION udf_GetColonistsCount(@PlanetName VARCHAR(30))
RETURNS INT
BEGIN
	DECLARE @Count INT
	SELECT @Count = COUNT(*) FROM Colonists AS c
	JOIN TravelCards AS tc ON tc.ColonistId = c.Id
	JOIN Journeys AS j ON j.Id = tc.JourneyId
	JOIN Spaceports AS s ON s.Id = j.DestinationSpaceportId
	JOIN Planets AS p ON p.Id = s.PlanetId
	WHERE p.Name = @PlanetName

	RETURN @Count
END
GO

SELECT dbo.udf_GetColonistsCount('Otroyphus')
GO

-- [==============================> 12 <==============================]
CREATE PROCEDURE usp_ChangeJourneyPurpose(@JourneyId INT, @NewPurpose NVARCHAR(11))
AS
BEGIN

	IF NOT EXISTS(SELECT Id FROM Journeys
		WHERE Id = @JourneyId)
			THROW 50001, 'The journey does not exist!', 1
	IF EXISTS(
		SELECT Id FROM Journeys
		WHERE Purpose = @newPurpose AND Id = @JourneyId)
			THROW 50001, 'You cannot change the purpose!', 1
	IF EXISTS(
		SELECT Id FROM Journeys
		WHERE Purpose != @newPurpose AND Id = @JourneyId)
		BEGIN
			UPDATE Journeys 
			SET Purpose = @NewPurpose
			WHERE Id = @JourneyId
		END
END
GO

EXEC dbo.usp_ChangeJourneyPurpose 4, 'Technical' 
EXEC usp_ChangeJourneyPurpose 2, 'Educational'
EXEC usp_ChangeJourneyPurpose 196, 'Technical' 
SELECT * FROM Journeys
